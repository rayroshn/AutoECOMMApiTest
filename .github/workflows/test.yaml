name: Run Maven Tests and Deploy Allure Report

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Create Log directory
        run: mkdir -p src/test/resources/Log
        shell: bash

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and Test with Maven
        run: |
          mvn clean test
          mvn allure:report
        shell: bash

      - name: Debug - List contents of target directory
        run: ls -R target
        shell: bash

      - name: Debug - Check Allure results existence
        run: |
          if [ -d "target/allure-results" ]; then
            echo "Allure results directory found."
            ls -R target/allure-results
          else
            echo "Allure results directory NOT found."
          fi
        shell: bash

      - name: Upload Log Files
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: src/test/resources/Log/*.log

      - name: Upload Allure Results
        uses: actions/upload-artifact@v3
        with:
          name: Allure-Results
          path: target/allure-results

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install Allure Commandline
        run: npm install -g allure-commandline

      - name: Generate Allure HTML report
        run: allure generate target/allure-results --clean -o target/allure-report

      - name: Debug - Check Allure report location
        run: |
          if [ -d "target/allure-report" ]; then
            echo "Allure HTML report found in target/allure-report"
            ls -R target/allure-report
          else
            echo "Allure HTML report NOT found in target/allure-report"
          fi
        shell: bash

      - name: Debug - Verify Node.js and Allure CLI
        run: |
          node --version
          allure --version

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure Report with history
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: target/allure-results
          allure_history: allure-history
          keep_reports: 20

      - name: Debug - List contents of allure-history
        run: |
          echo "Contents of allure-history directory:"
          ls -R allure-history
        shell: bash

      - name: Debug - Check for index.html
        run: |
          if [ -f "allure-history/index.html" ]; then
            echo "index.html found in allure-history"
          else
            echo "index.html NOT found in allure-history"
          fi
        shell: bash

      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Debug - Check gh-pages branch
        run: |
          git fetch origin gh-pages
          echo "Latest commit on gh-pages branch:"
          git log -1 --pretty=format:"%h - %an, %ar : %s" origin/gh-pages
        shell: bash

      - name: Comment PR with Allure Report link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: 'Allure Report for this PR: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/'
            })

      - name: Create GitHub Actions Summary
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "* Total Tests: $(grep -oP '(?<=<span class="summary__value">).*?(?=</span>)' allure-history/index.html | sed -n 1p)" >> $GITHUB_STEP_SUMMARY
          echo "* Passed: $(grep -oP '(?<=<span class="summary__value">).*?(?=</span>)' allure-history/index.html | sed -n 2p)" >> $GITHUB_STEP_SUMMARY
          echo "* Failed: $(grep -oP '(?<=<span class="summary__value">).*?(?=</span>)' allure-history/index.html | sed -n 3p)" >> $GITHUB_STEP_SUMMARY
          echo "* [Full Allure Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY
        shell: bash

      - name: Output Allure Report URL
        if: always()
        run: |
          echo "Allure report is published to https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
        shell: bash